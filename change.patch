diff --git a/lib/screens/medical_image_gallery.dart b/lib/screens/medical_image_gallery.dart
index 052325ef149b4087aa8b000c2e1bb898686771b9..acb9d988305a534ef58cc3cef19c260883f31e25 100644
--- a/lib/screens/medical_image_gallery.dart
+++ b/lib/screens/medical_image_gallery.dart
@@ -1,28 +1,29 @@
 // lib/screens/medical_image_gallery.dart
 
 import 'package:flutter/material.dart';
+import 'package:cached_network_image/cached_network_image.dart';
 
 class MedicalImageGallery extends StatelessWidget {
   final Stream<List<Map<String, dynamic>>>? imageStream;
   final Function({
     required BuildContext context,
     required List<Map<String, dynamic>> images,
     required int startIndex,
     required String patientId,
   }) onImageTap;
   final String patientId;
 
   const MedicalImageGallery({
     super.key,
     required this.imageStream,
     required this.onImageTap,
     required this.patientId,
   });
 
   @override
   Widget build(BuildContext context) {
     return StreamBuilder<List<Map<String, dynamic>>>(
       stream: imageStream,
       builder: (context, snapshot) {
         if (snapshot.connectionState == ConnectionState.waiting) {
           return const Padding(
@@ -40,55 +41,50 @@ class MedicalImageGallery extends StatelessWidget {
 
         final images = snapshot.data!;
         return SizedBox(
           height: 160,
           child: ListView.builder(
             scrollDirection: Axis.horizontal,
             padding: const EdgeInsets.symmetric(horizontal: 12),
             itemCount: images.length,
             itemBuilder: (context, index) {
               final image = images[index];
               return GestureDetector(
                 onTap: () {
                   onImageTap(
                     context: context,
                     images: images,
                     startIndex: index,
                     patientId: patientId,
                   );
                 },
                 child: Padding(
                   padding: const EdgeInsets.symmetric(horizontal: 8),
                   child: ClipRRect(
                     borderRadius: BorderRadius.circular(16),
                     child: AspectRatio(
                       aspectRatio: 3 / 4,
-                      child: Image.network(
-                        image['url'] ?? '',
+                      child: CachedNetworkImage(
+                        imageUrl: image['url'] ?? '',
                         fit: BoxFit.cover,
-                        loadingBuilder: (context, child, loadingProgress) {
-                          if (loadingProgress == null) return child;
-                          return Container(
-                            color: Colors.purple.shade50,
-                            child: const Center(
-                              child: CircularProgressIndicator(),
-                            ),
-                          );
-                        },
-                        errorBuilder: (context, error, stackTrace) {
-                          return Container(
-                            color: Colors.grey.shade200,
-                            child: const Icon(Icons.broken_image, size: 40),
-                          );
-                        },
+                        placeholder: (context, url) => Container(
+                          color: Colors.purple.shade50,
+                          child: const Center(
+                            child: CircularProgressIndicator(),
+                          ),
+                        ),
+                        errorWidget: (context, url, error) => Container(
+                          color: Colors.grey.shade200,
+                          child: const Icon(Icons.broken_image, size: 40),
+                        ),
                       ),
                     ),
                   ),
                 ),
               );
             },
           ),
         );
       },
     );
   }
 }
diff --git a/pubspec.yaml b/pubspec.yaml
index d8f6808e3e701118b433cc509ff2e844e854875e..eaf7e27364ede41dbaa5ac66c9ddbd9b9c305e41 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -20,50 +20,51 @@ version: 1.0.0+1
 
 environment:
   sdk: ^3.7.2
 
 # Dependencies specify other packages that your package needs in order to work.
 # To automatically upgrade your package dependencies to the latest versions
 # consider running `flutter pub upgrade --major-versions`. Alternatively,
 # dependencies can be manually updated by changing the version numbers below to
 # the latest version available on pub.dev. To see which dependencies have newer
 # versions available, run `flutter pub outdated`.
 dependencies:
   flutter_localizations:
     sdk: flutter
   firebase_core: ^2.31.0
   firebase_auth: ^4.17.4
   cloud_firestore: ^4.17.5
   intl: ^0.19.0 
   table_calendar: ^3.0.9
   shared_preferences: ^2.2.2
   url_launcher: ^6.2.5
   image_picker: ^1.1.1 
   firebase_storage: ^11.7.0
   uuid: ^4.3.3
   permission_handler: ^11.2.0
   provider: ^6.0.5
+  cached_network_image: ^3.3.1
 
   # The following adds the Cupertino Icons font to your application.
   # Use with the CupertinoIcons class for iOS style icons.f
   cupertino_icons: ^1.0.8
   image: ^4.5.4
 
 dev_dependencies:
   flutter_test:
     sdk: flutter
 
   # The "flutter_lints" package below contains a set of recommended lints to
   # encourage good coding practices. The lint set provided by the package is
   # activated in the `analysis_options.yaml` file located at the root of your
   # package. See that file for information about deactivating specific lint
   # rules and activating additional ones.
   flutter_lints: ^5.0.0
 
 # For information on the generic Dart part of this file, see the
 # following page: https://dart.dev/tools/pub/pubspec
 
 # The following section is specific to Flutter packages.
 flutter:
 
   # The following line ensures that the Material Icons font is
   # included with your application, so that you can use the icons in
