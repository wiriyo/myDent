diff --git a/lib/features/printing/render/receipt_renderer.dart b/lib/features/printing/render/receipt_renderer.dart
index 62741208e69c6e80cfb42b5f7ca1be91479d74f3..94314ddc7b788ff33087e975a126806d5ecd1d92 100644
--- a/lib/features/printing/render/receipt_renderer.dart
+++ b/lib/features/printing/render/receipt_renderer.dart
@@ -1,31 +1,32 @@
 import 'dart:typed_data';
 import 'dart:ui' as ui;
 import 'dart:math' as math;
 import 'package:flutter/material.dart';
 import 'package:flutter/services.dart' show rootBundle;
 import 'package:intl/intl.dart';
+import '../utils/th_format.dart';
 
 import '../domain/receipt_model.dart';
 import '../domain/appointment_slip_model.dart' show AppointmentInfo; // เผื่อใช้ในอนาคตสำหรับบล็อกใบนัด
 
 /// เรนเดอร์ใบเสร็จ 80 มม. ตามรูปแบบที่คลินิกต้องการ (ไม่มี VAT)
 /// โครง: โลโก้(ออปชัน) → ชื่อ/ที่อยู่/โทรคลินิก → เส้นคั่น "*********************" →
 /// เลขที่/วันที่/เวลา/ชื่อ/หัตถการ/ค่าบริการ แบบสองคอลัมน์ → (ใบนัดครั้งถัดไปออปชัน) → ขอบคุณ
 class ReceiptRenderer {
   /// ความกว้างพิกเซลสำหรับ 80mm @ ~203dpi (บางรุ่น 576px)
   final int widthPx;
   ReceiptRenderer({this.widthPx = 576});
 
   Future<ui.Image> render(
     ReceiptModel receipt, {
     String? logoAssetPath,
     bool showNextAppointment = false,
     AppointmentInfo? nextAppointment,
   }) async {
     final recorder = ui.PictureRecorder();
     final canvas = Canvas(recorder);
     final paint = Paint()..color = Colors.black;
     final double margin = 24;
     double y = margin;
 
     // พื้นหลังสีขาว (ความสูงเผื่อไว้ จะตัดตอนจบด้วย y จริง)
@@ -40,156 +41,149 @@ class ReceiptRenderer {
         y += img.height + 12;
       } catch (_) {/* ข้ามโลโก้หากโหลดไม่สำเร็จ */}
     }
 
     // 1) ส่วนหัวคลินิก (จัดกึ่งกลาง)
     y = _drawCenter(canvas, y, receipt.clinic.name,
         style: const TextStyle(fontSize: 22, fontWeight: FontWeight.w700));
     y = _drawCenter(canvas, y, receipt.clinic.address,
         style: const TextStyle(fontSize: 16));
     y = _drawCenter(canvas, y, 'โทร.  ${receipt.clinic.phone}',
         style: const TextStyle(fontSize: 16));
 
     // 2) เส้นคั่นดาว
     y += 6;
     y = _drawCenter(canvas, y, _repeatChar('*', count: 21),
         style: const TextStyle(letterSpacing: 1.0));
 
     // 3) ข้อมูลเลขที่ / วันที่ / เวลา / ชื่อ / หัตถการ / ค่าบริการ (สองคอลัมน์)
     y += 8;
     y = _drawTwoColumns(canvas, y,
         left: 'เลขที่',
         right: receipt.bill.billNo,
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle: const TextStyle(fontSize: 16));
 
-    final dateText = _formatThaiBuddhistDateShort(receipt.bill.issuedAt);
+    final dateText = ThFormat.dateThai(receipt.bill.issuedAt);
     y = _drawTwoColumns(canvas, y,
         left: 'วันที่',
         right: dateText,
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle: const TextStyle(fontSize: 16));
 
-    final timeText = DateFormat.Hm('th_TH').format(receipt.bill.issuedAt);
+    final timeText = ThFormat.timeThai(receipt.bill.issuedAt);
     y = _drawTwoColumns(canvas, y,
         left: 'เวลา',
-        right: '$timeText น.',
+        right: timeText,
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle: const TextStyle(fontSize: 16));
 
     final patientName = receipt.patient.name.trim();
     y = _drawTwoColumns(canvas, y,
         left: 'ชื่อ',
         right: '',
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle: const TextStyle(fontSize: 16));
     y = _drawRight(canvas, y,
         patientName.isEmpty ? '(ไม่ระบุ)' : patientName,
         style: const TextStyle(fontSize: 18));
 
     // ใช้บรรทัดแรกเป็นชื่อหัตถการหลัก (พร้อมซี่ฟันหากมีในวงเล็บ)
     final mainLine = receipt.lines.isNotEmpty ? receipt.lines.first : null;
     final treatmentName = mainLine?.name ?? '-';
     y = _drawTwoColumns(canvas, y,
         left: 'หัตถการ:',
         right: treatmentName,
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle: const TextStyle(fontSize: 16));
 
     final num total = receipt.lines.fold<num>(0, (p, e) => p + e.qty * e.price);
     y = _drawTwoColumns(canvas, y,
         left: 'ค่าบริการ',
         right: '${_formatBaht(total)} บาท',
         leftStyle: const TextStyle(fontSize: 16),
         rightStyle:
             const TextStyle(fontSize: 18, fontWeight: FontWeight.w700));
 
     // 4) ใบนัดครั้งถัดไป (ออปชัน)
     if (showNextAppointment && nextAppointment != null) {
       y += 18;
       canvas.drawLine(
           Offset(24, y), Offset(widthPx - 24, y), paint..strokeWidth = 1);
       y += 12;
       y = _drawCenter(canvas, y, 'ใบนัดครั้งถัดไป',
           style: const TextStyle(fontSize: 18, fontWeight: FontWeight.w700));
       y += 6;
-      final nextDate = _formatThaiBuddhistDateShort(nextAppointment.startAt);
-      final nextTime = DateFormat.Hm('th_TH').format(nextAppointment.startAt);
+      final nextDate = ThFormat.dateThai(nextAppointment.startAt);
+      final nextTime = ThFormat.timeThai(nextAppointment.startAt);
       y = _drawTwoColumns(canvas, y,
           left: 'วันที่นัด',
           right: nextDate,
           leftStyle: const TextStyle(fontSize: 16),
           rightStyle: const TextStyle(fontSize: 16));
       y = _drawTwoColumns(canvas, y,
           left: 'เวลา',
-          right: '$nextTime น.',
+          right: nextTime,
           leftStyle: const TextStyle(fontSize: 16),
           rightStyle: const TextStyle(fontSize: 16));
       final note = nextAppointment.note?.trim();
       if (note != null && note.isNotEmpty) {
         y = _drawTwoColumns(canvas, y,
             left: 'หมายเหตุ',
             right: note,
             leftStyle: const TextStyle(fontSize: 16),
             rightStyle: const TextStyle(fontSize: 16));
       }
       y += 10;
     }
 
     // 5) Footer
     y += 6;
     y = _drawCenter(canvas, y, 'ขอบคุณที่ใช้บริการ');
 
     // ปิดภาพ
     final picture = recorder.endRecording();
     final img = await picture.toImage(widthPx, y.ceil() + 24);
     return img;
   }
 
   Future<Uint8List> toPngBytes(ui.Image image) async {
     final byteData = await image.toByteData(format: ui.ImageByteFormat.png);
     return byteData!.buffer.asUint8List();
   }
 
   // ---------- Helpers ----------
   Future<ui.Image> _loadAssetImage(String assetPath, {int? maxWidth}) async {
     final data = await rootBundle.load(assetPath);
     final codec = await ui.instantiateImageCodec(
       data.buffer.asUint8List(),
       targetWidth: maxWidth,
     );
     final frame = await codec.getNextFrame();
     return frame.image;
   }
 
-  String _formatThaiBuddhistDateShort(DateTime d) {
-    // ตัวอย่าง: "14 ส.ค 2568"
-    final dmy = DateFormat('d MMM ', 'th_TH').format(d);
-    final buddhistYear = d.year + 543;
-    return '$dmy$buddhistYear';
-  }
-
   String _formatBaht(num n) => NumberFormat('#,##0.##', 'th_TH').format(n);
   String _repeatChar(String ch, {required int count}) => List.filled(count, ch).join();
 
   double _drawCenter(Canvas canvas, double y, String text, {TextStyle? style}) {
     final tp = TextPainter(
       text: TextSpan(text: text, style: (style ?? const TextStyle()).copyWith(color: Colors.black)),
       textAlign: TextAlign.center,
       textDirection: ui.TextDirection.ltr,
     )..layout(maxWidth: widthPx.toDouble());
     tp.paint(canvas, Offset((widthPx - tp.width) / 2, y));
     return y + tp.height + 4;
   }
 
   double _drawRight(Canvas canvas, double y, String text, {TextStyle? style}) {
     final tp = TextPainter(
       text: TextSpan(text: text, style: (style ?? const TextStyle()).copyWith(color: Colors.black)),
       textAlign: TextAlign.right,
       textDirection: ui.TextDirection.ltr,
     )..layout(maxWidth: widthPx.toDouble());
     tp.paint(canvas, Offset(widthPx - tp.width - 24, y));
     return y + tp.height + 2;
   }
 
   double _drawTwoColumns(
     Canvas canvas,
diff --git a/lib/features/printing/render/receipt_renderer_mydent.dart b/lib/features/printing/render/receipt_renderer_mydent.dart
index 1c11c5358680daa708f811e5f2ba985a06f3f3f0..53abbab92ffd01ade2e08f681e57c565aa37e542 100644
--- a/lib/features/printing/render/receipt_renderer_mydent.dart
+++ b/lib/features/printing/render/receipt_renderer_mydent.dart
@@ -284,50 +284,53 @@ class ReceiptRenderData {
     required this.change,
     this.nextAppointment,
   });
 }
 
 class ReceiptItem {
   final String name;
   final int qty;
   final num price;
   const ReceiptItem({required this.name, required this.qty, required this.price});
   num get lineTotal => qty * price;
 }
 
 class NextAppointmentBlock {
   final DateTime dateTime;
   final String? note;
   const NextAppointmentBlock({required this.dateTime, this.note});
 }
 
 class _ReceiptPreviewWidget extends StatelessWidget {
   final ReceiptRenderData data;
   final ByteData? logoBytes;
   final double width;
   const _ReceiptPreviewWidget({required this.data, required this.logoBytes, required this.width});
 
+  // ความกว้างคอลัมน์ซ้ายเพื่อให้รูปแบบตรงกับใบเสร็จตัวอย่าง
+  static const double _labelWidth = 200;
+
   @override
   Widget build(BuildContext context) {
     return Container(
       width: width,
       color: Colors.white,
       padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
       child: DefaultTextStyle(
         style: const TextStyle(fontSize: 22, color: Colors.black, height: 1.25),
         child: Column(
           crossAxisAlignment: CrossAxisAlignment.start,
           children: [
             if (logoBytes != null) ...[
               Center(
                 child: Image.memory(
                   logoBytes!.buffer.asUint8List(),
                   width: 180,
                   filterQuality: FilterQuality.medium,
                 ),
               ),
               const SizedBox(height: 6),
             ],
             Center(
               child: Text(
                 data.clinicName,
                 textAlign: TextAlign.center,
@@ -358,33 +361,33 @@ class _ReceiptPreviewWidget extends StatelessWidget {
             _kv('ค่าบริการ', ThFormat.baht(data.total)),
             const SizedBox(height: 18),
             if (data.nextAppointment != null) ...[
               const Divider(height: 20, thickness: 1),
               const Center(child: Text('ใบนัดครั้งถัดไป', style: TextStyle(fontWeight: FontWeight.w700))),
               const SizedBox(height: 6),
               _kv('วันที่นัด', ThFormat.dateThai(data.nextAppointment!.dateTime)),
               _kv('เวลา', ThFormat.timeThai(data.nextAppointment!.dateTime)),
               if ((data.nextAppointment!.note ?? '').trim().isNotEmpty)
                 _kv('หมายเหตุ', data.nextAppointment!.note!),
               const SizedBox(height: 10),
             ],
             const Center(child: Text('ขอบคุณที่ใช้บริการ')),
           ],
         ),
       ),
     );
   }
 
   Widget _kv(String k, String v) {
     return Padding(
       padding: const EdgeInsets.symmetric(vertical: 1.5),
       child: Row(
         crossAxisAlignment: CrossAxisAlignment.start,
         children: [
-          SizedBox(width: 180, child: Text(k)),
+          SizedBox(width: _labelWidth, child: Text(k)),
           const SizedBox(width: 10),
           Expanded(child: Text(v, textAlign: TextAlign.right)),
         ],
       ),
     );
   }
 }
diff --git a/lib/features/printing/utils/th_format.dart b/lib/features/printing/utils/th_format.dart
index 3b1e8f5cae003ecbdf6725a67c020291d48aaf4c..5620ae1802d2f46f0c6c4004b8c0eaf4cba3f829 100644
--- a/lib/features/printing/utils/th_format.dart
+++ b/lib/features/printing/utils/th_format.dart
@@ -1,32 +1,33 @@
 // lib/features/printing/utils/th_format.dart
 import 'package:intl/intl.dart';
 
 class ThFormat {
   static String baht(num value) {
     final f = NumberFormat('#,##0.##', 'th_TH');
     return '${f.format(value)} บาท';
   }
 
   /// คืนปี พ.ศ.
   static int beYear(DateTime dt) => dt.year + 543;
 
   /// วันที่ไทย เช่น 12 ก.ย. 2568 หรือ 12 ก.ย. 68 (เมื่อ shortYear=true)
   static String dateThai(DateTime dt, {bool shortYear = false}) {
+    // ชื่อย่อเดือนแบบไม่มีจุดท้าย เพื่อตรงกับรูปแบบใบเสร็จของคลินิก
     final months = [
-      'ม.ค.', 'ก.พ.', 'มี.ค.', 'เม.ย.', 'พ.ค.', 'มิ.ย.',
-      'ก.ค.', 'ส.ค.', 'ก.ย.', 'ต.ค.', 'พ.ย.', 'ธ.ค.'
+      'ม.ค', 'ก.พ', 'มี.ค', 'เม.ย', 'พ.ค', 'มิ.ย',
+      'ก.ค', 'ส.ค', 'ก.ย', 'ต.ค', 'พ.ย', 'ธ.ค'
     ];
     final d = dt.day;
     final m = months[dt.month - 1];
     final y = beYear(dt);
     final yStr = shortYear ? (y % 100).toString().padLeft(2, '0') : y.toString();
     return '$d $m $yStr';
   }
 
   /// เวลาไทย HH:mm น.
   static String timeThai(DateTime dt) {
     final hh = dt.hour.toString().padLeft(2, '0');
     final mm = dt.minute.toString().padLeft(2, '0');
     return '$hh:$mm น.';
   }
 }
\ No newline at end of file
