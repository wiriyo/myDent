// ----------------------------------------------------------------
// üìÅ lib/models/patient.dart
// v1.2.0 - ‚ú® Robust fromMap Factory
// ----------------------------------------------------------------
import 'package:cloud_firestore/cloud_firestore.dart';

class Patient {
  final String patientId;
  final String name;
  final String prefix;
  final String? hnNumber;
  final String? telephone;
  final String? address;
  final String? idCard;
  final DateTime? birthDate;
  final String? medicalHistory;
  final String? allergy;
  final int rating;
  final String gender;
  final int? age;

  Patient({
    required this.patientId,
    required this.name,
    required this.prefix,
    this.hnNumber,
    this.telephone,
    this.address = '',
    this.idCard = '',
    this.birthDate,
    this.medicalHistory = '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
    this.allergy = '‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò',
    this.rating = 3,
    this.gender = '‡∏´‡∏ç‡∏¥‡∏á',
    this.age,
  });

  Map<String, dynamic> toMap() {
    return {
      'name': name,
      'prefix': prefix,
      'hn_number': hnNumber,
      'telephone': telephone,
      'address': address,
      'idCard': idCard,
      'birthDate': birthDate != null ? Timestamp.fromDate(birthDate!) : null,
      'medicalHistory': medicalHistory,
      'allergy': allergy,
      'rating': rating,
      'gender': gender,
      'age': age,
    };
  }

  factory Patient.fromMap(Map<String, dynamic> map) {
    // ‚ú® [FIXED v1.2] ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á ID ‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏£‡∏á‡πÅ‡∏•‡∏∞‡∏â‡∏•‡∏≤‡∏î‡∏Ç‡∏∂‡πâ‡∏ô
    // ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ field 'patientId' ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏¢‡∏π‡πà
    String id = '';
    
    // 1. ‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Å‡∏±‡∏ö docId ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å Service ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏™‡∏°‡∏≠ ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ ID ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πâ‡∏à‡∏£‡∏¥‡∏á
    if (map['docId'] != null && (map['docId'] as String).isNotEmpty) {
      id = map['docId'];
    } 
    // 2. ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ docId (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡πà‡∏≤‡∏°‡∏≤‡∏Å‡πÜ) ‡πÉ‡∏´‡πâ‡∏•‡∏≠‡∏á‡∏´‡∏≤‡∏à‡∏≤‡∏Å patientId ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    else if (map['patientId'] != null && (map['patientId'] as String).isNotEmpty) {
      id = map['patientId'];
    }

    return Patient(
      patientId: id, 
      name: map['name'] ?? '',
      prefix: map['prefix'] ?? '',
      hnNumber: map['hn_number'],
      telephone: map['telephone'],
      address: map['address'],
      idCard: map['idCard'],
      birthDate: map['birthDate'] is Timestamp 
                 ? (map['birthDate'] as Timestamp).toDate()
                 : (map['birthDate'] is String ? DateTime.tryParse(map['birthDate']) : null),
      medicalHistory: map['medicalHistory'],
      allergy: map['allergy'],
      rating: map['rating'] ?? 3,
      gender: map['gender'] ?? '‡∏´‡∏ç‡∏¥‡∏á',
      age: map['age'],
    );
  }
}