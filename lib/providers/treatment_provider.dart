// ----- ‚ÄºÔ∏è NEW FILE: lib/providers/treatment_provider.dart -----
// ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô 1.2: üßë‚Äçüç≥‚ú® ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û‡∏Ñ‡∏ô‡πÉ‡∏´‡∏°‡πà!
// ‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏Ñ‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö Logic ‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

import 'package:flutter/material.dart';
import '../models/treatment.dart';
import '../services/treatment_service.dart';
import '../services/treatment_master_service.dart';

class TreatmentProvider with ChangeNotifier {
  // ‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏∑‡∏≠ Service ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡∏Ñ‡πà‡∏∞
  final TreatmentService _treatmentService = TreatmentService();

  // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß (‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∂‡πÄ‡∏õ‡∏•‡πà‡∏≤)
  bool _isLoading = false;
  bool get isLoading => _isLoading;

  // ‡∏´‡∏≤‡∏Å‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏û‡∏•‡∏≤‡∏î ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏≠‡∏∞‡πÑ‡∏£
  String? _error;
  String? get error => _error;

  // ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Ñ‡∏•‡∏≤‡∏™‡∏ô‡∏µ‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)
  void _setLoading(bool value) {
    _isLoading = value;
    notifyListeners(); // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô "‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü" (UI) ‡∏ß‡πà‡∏≤‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞!
  }

  // ‡πÄ‡∏°‡∏ò‡∏≠‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
  void _setError(String? message) {
    _error = message;
  }

  // üç≥ ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤"
  // ‡∏£‡∏±‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•) ‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü (UI)
  Future<bool> saveOrUpdateTreatment({
    required String patientId,
    String? treatmentId,
    String? selectedTreatmentMasterId,
    required String procedure,
    required String toothNumber,
    required double price,
    required DateTime date,
  }) async {
    _setLoading(true);
    _setError(null);

    try {
      // 1. ‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏à‡∏∞‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡πà‡∏≠‡∏ô‡∏ß‡πà‡∏≤ "‡∏´‡∏±‡∏ï‡∏ñ‡∏Å‡∏≤‡∏£" ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡πÉ‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å (Master) ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
      // ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ ‡∏Å‡πá‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏≠‡∏≤ ID ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤
      final masterId = await TreatmentMasterService.addIfNotExist(procedure, price);

      // 2. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∏‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (‡∏™‡∏£‡πâ‡∏≤‡∏á Treatment object)
      final treatmentData = Treatment(
        id: treatmentId ?? '', // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà ID ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
        patientId: patientId,
        // ‡∏ñ‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ ID ‡∏ô‡∏±‡πâ‡∏ô, ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ ID ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á/‡∏´‡∏≤‡πÄ‡∏à‡∏≠
        treatmentMasterId: (selectedTreatmentMasterId != null && selectedTreatmentMasterId.isNotEmpty)
            ? selectedTreatmentMasterId
            : masterId,
        procedure: procedure,
        toothNumber: toothNumber,
        price: price,
        date: date,
      );

      // 3. ‡∏™‡πà‡∏á‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÑ‡∏õ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü (‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Firestore)
      if (treatmentId == null || treatmentId.isEmpty) {
        await _treatmentService.addTreatment(treatmentData);
      } else {
        await _treatmentService.updateTreatment(treatmentData);
      }

      _setLoading(false);
      return true; // ‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
    } catch (e) {
      print('üßë‚Äçüç≥‚ùå ‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏ó‡∏≥‡∏û‡∏•‡∏≤‡∏î: $e');
      _setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏∞: $e');
      _setLoading(false);
      return false; // ‡∏ó‡∏≥‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
    }
  }

  // üç≥ ‡∏≠‡∏µ‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏Ç‡∏≠‡∏á‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß: "‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏Å‡∏©‡∏≤"
  Future<bool> deleteTreatment(String patientId, String treatmentId) async {
    _setLoading(true);
    _setError(null);
    try {
      await _treatmentService.deleteTreatment(patientId, treatmentId);
      _setLoading(false);
      return true; // ‡∏•‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    } catch (e) {
      print('üßë‚Äçüç≥‚ùå ‡∏û‡πà‡∏≠‡∏Ñ‡∏£‡∏±‡∏ß‡∏ó‡∏≥‡∏û‡∏•‡∏≤‡∏î‡∏ï‡∏≠‡∏ô‡∏•‡∏ö: $e');
      _setError('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏∞: $e');
      _setLoading(false);
      return false; // ‡∏•‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
    }
  }
}